// Code generated by mockery v2.12.2. DO NOT EDIT.

package mocks

import (
	entities "Tugas-Mini-Project/entities"

	mock "github.com/stretchr/testify/mock"

	testing "testing"
)

// AuthService is an autogenerated mock type for the AuthService type
type AuthService struct {
	mock.Mock
}

// LoginService provides a mock function with given fields: username, password, roleId
func (_m *AuthService) LoginService(username string, password string, roleId int) (string, int) {
	ret := _m.Called(username, password, roleId)

	var r0 string
	if rf, ok := ret.Get(0).(func(string, string, int) string); ok {
		r0 = rf(username, password, roleId)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 int
	if rf, ok := ret.Get(1).(func(string, string, int) int); ok {
		r1 = rf(username, password, roleId)
	} else {
		r1 = ret.Get(1).(int)
	}

	return r0, r1
}

// RegisterService provides a mock function with given fields: credential
func (_m *AuthService) RegisterService(credential entities.User) error {
	ret := _m.Called(credential)

	var r0 error
	if rf, ok := ret.Get(0).(func(entities.User) error); ok {
		r0 = rf(credential)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewAuthService creates a new instance of AuthService. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewAuthService(t testing.TB) *AuthService {
	mock := &AuthService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
