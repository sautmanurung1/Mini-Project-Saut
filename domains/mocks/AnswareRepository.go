// Code generated by mockery v2.12.2. DO NOT EDIT.

package mocks

import (
	entities "Tugas-Mini-Project/entities"

	mock "github.com/stretchr/testify/mock"
)

// AnswareRepository is an autogenerated mock type for the AnswareRepository type
type AnswareRepository struct {
	mock.Mock
}

// CreateAnsware provides a mock function with given fields: answare
func (_m *AnswareRepository) CreateAnsware(answare entities.Answare) error {
	ret := _m.Called(answare)

	var r0 error
	if rf, ok := ret.Get(0).(func(entities.Answare) error); ok {
		r0 = rf(answare)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DeleteAnsware provides a mock function with given fields: id, ans
func (_m *AnswareRepository) DeleteAnsware(id int, ans entities.Answare) error {
	ret := _m.Called(id, ans)

	var r0 error
	if rf, ok := ret.Get(0).(func(int, entities.Answare) error); ok {
		r0 = rf(id, ans)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetAllAnsware provides a mock function with given fields:
func (_m *AnswareRepository) GetAllAnsware() ([]entities.Answare, error) {
	ret := _m.Called()

	var r0 []entities.Answare
	if rf, ok := ret.Get(0).(func() []entities.Answare); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]entities.Answare)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetAnswareById provides a mock function with given fields: id
func (_m *AnswareRepository) GetAnswareById(id int) (entities.Answare, error) {
	ret := _m.Called(id)

	var r0 entities.Answare
	if rf, ok := ret.Get(0).(func(int) entities.Answare); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Get(0).(entities.Answare)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateAnsware provides a mock function with given fields: id, answare
func (_m *AnswareRepository) UpdateAnsware(id int, answare entities.Answare) (entities.Answare, error) {
	ret := _m.Called(id, answare)

	var r0 entities.Answare
	if rf, ok := ret.Get(0).(func(int, entities.Answare) entities.Answare); ok {
		r0 = rf(id, answare)
	} else {
		r0 = ret.Get(0).(entities.Answare)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int, entities.Answare) error); ok {
		r1 = rf(id, answare)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
