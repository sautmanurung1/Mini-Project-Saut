// Code generated by mockery v2.12.2. DO NOT EDIT.

package answare

import (
	entities "Tugas-Mini-Project/entities"
	mock "github.com/stretchr/testify/mock"
)

// AnswareService is an autogenerated mock type for the AnswareService type
type AnswareService struct {
	mock.Mock
}

// CreateAnswareService provides a mock function with given fields: answare
func (_m *AnswareService) CreateAnswareService(answare entities.Answare) (string, error) {
	ret := _m.Called(answare)

	var r0 string
	if rf, ok := ret.Get(0).(func(entities.Answare) string); ok {
		r0 = rf(answare)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(entities.Answare) error); ok {
		r1 = rf(answare)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteAnswareService provides a mock function with given fields: id, ans
func (_m *AnswareService) DeleteAnswareService(id int, ans entities.Answare) (string, error) {
	ret := _m.Called(id, ans)

	var r0 string
	if rf, ok := ret.Get(0).(func(int, entities.Answare) string); ok {
		r0 = rf(id, ans)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int, entities.Answare) error); ok {
		r1 = rf(id, ans)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetAllAnswareService provides a mock function with given fields:
func (_m *AnswareService) GetAllAnswareService() ([]entities.Answare, error) {
	ret := _m.Called()

	var r0 []entities.Answare
	if rf, ok := ret.Get(0).(func() []entities.Answare); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]entities.Answare)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetAnswareByIdService provides a mock function with given fields: id
func (_m *AnswareService) GetAnswareByIdService(id int) (entities.Answare, error) {
	ret := _m.Called(id)

	var r0 entities.Answare
	if rf, ok := ret.Get(0).(func(int) entities.Answare); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Get(0).(entities.Answare)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateAnswareService provides a mock function with given fields: id, answare
func (_m *AnswareService) UpdateAnswareService(id int, answare entities.Answare) (entities.Answare, error) {
	ret := _m.Called(id, answare)

	var r0 entities.Answare
	if rf, ok := ret.Get(0).(func(int, entities.Answare) entities.Answare); ok {
		r0 = rf(id, answare)
	} else {
		r0 = ret.Get(0).(entities.Answare)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int, entities.Answare) error); ok {
		r1 = rf(id, answare)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
